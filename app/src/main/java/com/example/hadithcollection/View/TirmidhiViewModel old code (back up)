@HiltViewModel
class TirmidhiViewModel @Inject constructor(
    private val apiInterface: API_Interface
) : ViewModel() {

    @Inject
    var retrofitBuilder = Retrofit.Builder()
        .addConverterFactory(GsonConverterFactory.create())
        .baseUrl(BASE_URL)
        .build()
        .create(API_Interface::class.java)

    val hadithLiveData = MutableLiveData<String>()

    fun fetchHadith() {
        viewModelScope.launch {
            try {
                val retrofitData = retrofitBuilder.getHadithData()

                retrofitData.enqueue(object : Callback<MyHadithData> {
                    override fun onResponse(
                        call: Call<MyHadithData>,
                        response: Response<MyHadithData>
                    ) {
                        if (response.isSuccessful) {
                            val responseBody = response.body()
                            if (responseBody != null) {
                                val hadithData = responseBody.data
                                val hadithText = hadithData.hadith_english
                                hadithLiveData.value = hadithText
                            } else {
                                Log.d("TirmidhiViewModel", "RESTART THE APP")
                            }
                        }
                    }

                    override fun onFailure(call: Call<MyHadithData>, t: Throwable) {
                        Log.d("TirmidhiViewModel", "RESTART THE APP: ${t.message}")
                    }

                })
            } catch (e: Exception) {
                Log.d("TirmidhiViewModel", "RESTART THE APP: ${e.message}")
            }
        }
    }
}